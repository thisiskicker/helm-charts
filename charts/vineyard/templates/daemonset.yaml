apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "vineyard.fullname" . }}
  labels:
    {{- include "vineyard.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "vineyard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vineyard.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.image.tagPrefix }}
          {{- if .Values.image.tag }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tagPrefix }}-{{ .Values.image.tag }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tagPrefix }}-v{{ default .Chart.AppVersion }}"
          {{- end }}
          {{- else }}
          {{- if .Values.image.tag }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:v{{ default .Chart.AppVersion }}"
          {{- end }}
          {{- end }}
          {{- if .Values.image.pullPolicy }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- end }}
          command:
          - /bin/bash
          - "-c"
          - |
            /usr/bin/wait-for-it.sh -t 60 etcd-for-vineyard.{{ .Release.Namespace }}.svc.cluster.local:2379;
            sleep 1;
            /usr/local/bin/vineyardd \
          {{- if .Values.vineyard.sharedMemorySize }}
              --size \
              {{ .Values.vineyard.sharedMemorySize }} \
          {{- end }}
          {{- if .Values.vineyard.metrics }}
              --metrics \
              -log_dir /var/log/vineyard/ \
          {{- end }} 
              --etcd_endpoint \
              http://etcd-for-vineyard.{{ .Release.Namespace }}.svc.cluster.local:2379
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
            - name: USER
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: ipc
              containerPort: 9600
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9600
            periodSeconds: 60
          readinessProbe:
            exec:
              command:
              - ls
              - /var/run/vineyard.sock
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: run
            mountPath: /var/run
          - name: shm
            mountPath: /dev/shm
          - name: log
            mountPath: /var/log/vineyard
    {{- if .Values.vineyard.metrics }}
        - name: metrics
          image : {{ .Values.metricImage.repository}}:latest
          imagePullPolicy: {{ .Values.metricImage.pullPolicy }}
          command: ["./grok_exporter"]
          args: ["-config", "grok_exporter.yml", "-disable-exporter-metrics", "&"]
          ports:
            - name: exporter
              containerPort: 9144
              protocol: TCP
          volumeMounts:
          - name: log
            mountPath: /var/log/vineyard
    {{- end }}   
      volumes:
      {{- if eq .Values.vineyard.volumeType "hostPath" }}
      - name: run
        hostPath:
          {{- if .Values.vineyard.hostPath }}
          path: {{ .Values.vineyard.hostPath }}
          {{- else }}
          path: /var/run/vineyard-{{ .Release.Namespace }}-{{ include "vineyard.fullname" . }}
          {{- end }}
      {{- end }}
      {{- if eq .Values.vineyard.volumeType "persistentVolumeClaim" }}
      - name: run
        persistentVolumeClaim:
          claimName: "{{ .Values.vineyard.persistVolumeClaimName }}"
      {{- end }}
      - name: shm
        emptyDir:
          medium: Memory
      
      - name: log
        emptyDir: {}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
